---
import { getCollection } from 'astro:content';
import TeamCard from "@components/ui/elements/cards/TeamCard.astro";

const valorantTeams = await getCollection('teams', ({ data }) => {
    return data.game === 'valorant';
});
const leagueTeams = await getCollection('teams', ({ data }) => {
    return data.game === 'league';
});
const overwatchTeams = await getCollection('teams', ({ data }) => {
    return data.game === 'overwatch';
});
const rocketLeagueTeams = await getCollection('teams', ({ data }) => {
    return data.game === 'rocket_league';
});
const csTeams = await getCollection('teams', ({ data }) => {
    return data.game === 'counter_strike';
});
valorantTeams.reverse().sort((a, b) => (a.data.league > b.data.league) ? 1 : -1);
leagueTeams.reverse().sort((a, b) => (a.data.league > b.data.league) ? 1 : -1);
overwatchTeams.reverse().sort((a, b) => (a.data.league > b.data.league) ? 1 : -1);
rocketLeagueTeams.reverse().sort((a, b) => (a.data.league > b.data.league) ? 1 : -1);
csTeams.reverse().sort((a, b) => (a.data.league > b.data.league) ? 1 : -1);

interface Props {
    games?: Array<"valorant" | "league" | "overwatch" | "rocket_league" | "counter_strike">;
}

let { games } = Astro.props;

if (games === undefined) games = ["valorant", "league", "overwatch", "rocket_league", "counter_strike"];

let gameTeams = {
    "valorant": valorantTeams,
    "league": leagueTeams,
    "overwatch": overwatchTeams,
    "rocket_league": rocketLeagueTeams,
    "counter_strike": csTeams
}
---

<div class="flex flex-wrap gap-3.5 md:gap-20 justify-center 3xl:justify-normal">
    {games.map((game) => (
        gameTeams[game].map((team) => (
            <TeamCard game={game} league={team.data.league} team={team.data.name}></TeamCard>
        ))
    ))}
</div>
